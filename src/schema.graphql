# Three root types - Query, Mutation, Subscription

type Query {
    info: String!
    users: [User!]!
    user(id: ID!): User
    guide: [User!]!
}

# type Mutation {
#     #signup
#     #signin
#     #post
#     #upvote
#     #downvote
    # createuser(name: String!): User!
# }

type User {
    id: ID!
    about: String!
    email: String!
    location: String!
    firstName: String!
    lastName: String!
    # expertise: [Expertise!]!
    guide: Boolean!
}

# # might be able to combine this with the user directly
# type Expertise {
#     title: String!
#     rating: Number!
#     user: User!
# }

# type Question {
#     content: String!
#     user: User!
#     id: ID!
# }

# type Answer {
#     content: String!
#     user: User!
#     id: ID!
# }

# type UpVote {

# }

# type DownVote {

# }

# enum Sort {
#     asc
#     desc
# }
