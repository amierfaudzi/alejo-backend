# Three root types - Query, Mutation, Subscription

type Query {
    info: String!
    users: [User!]!
    user(id: ID!): User
    guide: [User!]!
    # all question
    allQuestion: [Question!]!
    question(id: ID!): Question
    answer(questionId: ID!): [Answer!]!
}

input ExpertiseInput {
    title: String!
    rating: Int!
}

type Expertise {
    title: String!
    rating: Int!
}

type Mutation {
    addQuestion(content: String!, userId: ID!): Question!
    addAnswer(content: String!, userId: ID!, questionId: ID!): Answer!
    addUser(firstName: String!, lastName: String!, email: String!, about: String!, guide: Boolean!, location: String!, expertise: [ExpertiseInput]): User!
}

# type Mutation {
#     #signup
#     #signin
#     #post
#     #upvote
#     #downvote
#question
#answer
    # createuser(name: String!): User!
# }

type User {
    id: ID!
    about: String!
    email: String!
    location: String!
    firstName: String!
    lastName: String!
    expertise: [Expertise!]!
    guide: Boolean!
}

type Question {
    content: String!
    user: User!
    id: ID!
}

type Answer {
    content: String!
    userId: ID!
    questionId: ID!
    id: ID!
}

# type UpVote {

# }

# type DownVote {

# }

# enum Sort {
#     asc
#     desc
# }
