# Three root types - Query, Mutation, Subscription

# Main Query types
type Query {
    users: [User!]!
    user(id: ID!): User
    guide: [User!]!
    allQuestions: [Question!]!
    question(id: ID!): Question
    userQuestions: [Question!]!
    userAnswers: [Answer!]!
    answers(questionId: ID!): [Answer!]!
    login(loginInput: LoginInput!): AuthPayload
}

# Main Mutation types
type Mutation {
    addQuestion(questionInput: QuestionInput!): Question!
    addAnswer(answerInput: AnswerInput!): Answer!
    addUser(userInput: UserInput!): AuthPayload
}

input UserInput {
    firstName: String!
    lastName: String!
    email: String!
    expertise: [String]!
    guide: Boolean!
    about: String!
    location: String!
    password: String
}

input LoginInput {
    email: String!
    password: String!
}

type User {
    _id: ID!
    about: String!
    email: String!
    location: String!
    firstName: String!
    lastName: String!
    expertise: [String!]!
    guide: Boolean!
    password: String
}

input QuestionInput {
    content: String!
}

type Question {
    _id: ID!
    content: String!
    date: String!
    creator: User!
}

input AnswerInput {
    content: String!
    questionId: ID!
}

type Answer {
    _id: ID!
    content: String!
    creator: User!
    date: String!
    questionId: ID!
}

type AuthPayload {
    token: String
    user: User
}

# type UpVote {

# }

# type DownVote {

# }

# enum Sort {
#     asc
#     desc
# }
